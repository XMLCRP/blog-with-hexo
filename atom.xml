<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>我的技术博客</title>
  
  
  <link href="https://xmlcrp.github.io/atom.xml" rel="self"/>
  
  <link href="https://xmlcrp.github.io/"/>
  <updated>2025-06-29T23:48:04.856Z</updated>
  <id>https://xmlcrp.github.io/</id>
  
  <author>
    <name>Jessee Mecry</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>三轴自动搬运加工机械手项目实战开发-day2.MySQL数据库的创建及导入导出</title>
    <link href="https://xmlcrp.github.io/2025/06/28/[%E8%BF%90%E5%8A%A8%E6%8E%A7%E5%88%B6]day3MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BD%BF%E7%94%A8/"/>
    <id>https://xmlcrp.github.io/2025/06/28/[%E8%BF%90%E5%8A%A8%E6%8E%A7%E5%88%B6]day3MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BD%BF%E7%94%A8/</id>
    <published>2025-06-28T07:00:00.000Z</published>
    <updated>2025-06-29T23:48:04.856Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MySQL数据库的创建及导入导出"><a href="#MySQL数据库的创建及导入导出" class="headerlink" title="MySQL数据库的创建及导入导出"></a>MySQL数据库的创建及导入导出</h1><h2 id="1-数据库表结构设计"><a href="#1-数据库表结构设计" class="headerlink" title="1. 数据库表结构设计"></a>1. 数据库表结构设计</h2><ul><li><p><img src="https://raw.githubusercontent.com/XMLCRP/blog-with-hexo/main/images/2025-06-28-14-58-38.png"></p></li><li><p><strong>系统架构</strong>：设计了用户表、产品表、统计表和日志表四张核心表，构成完整的生产管理系统数据库架构</p></li></ul><h2 id="2-创建数据表"><a href="#2-创建数据表" class="headerlink" title="2. 创建数据表"></a>2. 创建数据表</h2><h3 id="1）MySQL数据库客户端软件"><a href="#1）MySQL数据库客户端软件" class="headerlink" title="1）MySQL数据库客户端软件"></a>1）MySQL数据库客户端软件</h3><ul><li>通用方法：通过客户端软件连接数据库后执行SQL语句或使用可视化工具创建</li><li>对比说明：<br>◦  SQL Server使用SSMS<br>◦  MySQL有多种客户端可选</li></ul><h3 id="2）推荐软件"><a href="#2）推荐软件" class="headerlink" title="2）推荐软件"></a>2）推荐软件</h3><ul><li>软件名称：Webyog SQLyog Ultimate 12.0.8</li><li>软件特点：<br>◦ 专为MySQL设计的可视化工具<br>◦ 提供完整数据库管理功能<br>◦ 支持Windows平台（含64位版本）</li><li>软件授权使用<br>授权方式：<br>◦ 专业版注册名：luoye2562<br>◦ 专业版注册码：ec38d297-0543-4679-b098-4baadf91f983<br>◦ 企业版注册码：59adfdfe-bcb0-4762-8267-d7fccf16beda<br>◦ 终极版注册码：8d8120df-a5c3-4989-8f47-5afc79c56e7c<br>◦ 安装注意：选择对应版本的注册码激活</li></ul><h3 id="3）连接数据库"><a href="#3）连接数据库" class="headerlink" title="3）连接数据库"></a>3）连接数据库</h3><p><img src="https://raw.githubusercontent.com/XMLCRP/blog-with-hexo/main/images/2025-06-28-15-04-28.png"></p><ul><li>连接参数：<br>◦ 本地连接使用localhost<br>◦ 默认端口3306<br>◦ 用户名root<br>◦ 密码123（示例）</li><li>验证方式：通过测试连接确认配置正确</li><li>版本显示：连接成功后会显示MySQL版本（如8.0.18）</li></ul><h3 id="4）创建数据表两种方式"><a href="#4）创建数据表两种方式" class="headerlink" title="4）创建数据表两种方式"></a>4）创建数据表两种方式</h3><p><img src="https://raw.githubusercontent.com/XMLCRP/blog-with-hexo/main/images/2025-06-28-15-04-56.png"><br>SQL语句方式：<br>在查询编辑器编写CREATE TABLE语句<br>支持完整的SQL语法<br>可视化方式：<br>右键菜单创建数据库&#x2F;表<br>图形化设置字段类型、长度等属性<br>实时生成SQL预览<br>操作提示：创建完成后有确认提示，可选择继续创建或结束</p><h3 id="5）导入数据库文件"><a href="#5）导入数据库文件" class="headerlink" title="5）导入数据库文件"></a>5）导入数据库文件</h3><p><img src="https://raw.githubusercontent.com/XMLCRP/blog-with-hexo/main/images/2025-06-28-15-05-22.png"></p><ul><li>文件格式：.sql后缀的文本文件</li><li>导入步骤：<br>◦ 右键数据库选择”执行SQL脚本”<br>◦ 选择脚本文件路径<br>◦ 执行后刷新对象浏览器</li><li>导出操作：<br>◦ 右键数据库选择”备份&#x2F;导出”<br>◦ 可选择仅结构或包含数据<br>◦ 生成标准SQL文件便于迁移<br>◦  <img src="https://raw.githubusercontent.com/XMLCRP/blog-with-hexo/main/images/2025-06-28-15-05-47.png"></li><li>导出选项：<br>◦ 包含CREATE DATABASE语句<br>◦ 设置FOREIGN_KEY_CHECKS&#x3D;0<br>◦ 批量INSERT语句优化<br>◦ 文件命名：建议包含日期&#x2F;版本标识</li></ul><h2 id="3-知识小结"><a href="#3-知识小结" class="headerlink" title="3. 知识小结"></a>3. 知识小结</h2><table><thead><tr><th>知识点</th><th>核心内容</th><th>关键操作&#x2F;注意事项</th></tr></thead><tbody><tr><td>数据库表设计</td><td>设计了四个表：用户表（权限管理）、产品表（生产数据记录）、统计表（按天聚合数据）、日志表（系统日志报警）</td><td><strong>表关系设计</strong> 需符合业务需求，统计表用于优化查询性能</td></tr><tr><td>MySQL客户端工具</td><td>推荐使用 SQLyog（收费但有授权），支持可视化操作与 SQL 脚本执行</td><td>安装时注意选择 64 位版本，授权信息在安装必读 TXT 中</td></tr><tr><td>数据库创建方式</td><td>1. 通过 SQL 语句编写（如 CREATE TABLE）；2. 通过客户端右键菜单直接创建</td><td><strong>可视化操作</strong> 更直观，适合初学者</td></tr><tr><td>数据库导入&#x2F;导出</td><td>导入：执行 SQL 脚本文件（.sql 后缀）；导出：备份为 SQL 文件（含结构或数据）</td><td><strong>导出选项</strong> 需明确选择“仅结构”或“包含数据”</td></tr><tr><td>实战操作演示</td><td>1. 连接本地 MySQL（主机名 localhost，端口 3306）；2. 创建字段时指定类型（如 VARCHAR(100)）</td><td><strong>测试连接</strong> 确保配置正确，字段类型需匹配实际数据</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;MySQL数据库的创建及导入导出&quot;&gt;&lt;a href=&quot;#MySQL数据库的创建及导入导出&quot; class=&quot;headerlink&quot; title=&quot;MySQL数据库的创建及导入导出&quot;&gt;&lt;/a&gt;MySQL数据库的创建及导入导出&lt;/h1&gt;&lt;h2 id=&quot;1-数据库表结构设</summary>
      
    
    
    
    <category term="上位机" scheme="https://xmlcrp.github.io/categories/%E4%B8%8A%E4%BD%8D%E6%9C%BA/"/>
    
    
    <category term="运动控制" scheme="https://xmlcrp.github.io/tags/%E8%BF%90%E5%8A%A8%E6%8E%A7%E5%88%B6/"/>
    
    <category term="MySQL数据库" scheme="https://xmlcrp.github.io/tags/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>三轴自动搬运加工机械手项目实战开发-day2.MySQL数据库部署过程</title>
    <link href="https://xmlcrp.github.io/2025/06/28/[%E8%BF%90%E5%8A%A8%E6%8E%A7%E5%88%B6]day2MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E9%83%A8%E7%BD%B2%E8%BF%87%E7%A8%8B/"/>
    <id>https://xmlcrp.github.io/2025/06/28/[%E8%BF%90%E5%8A%A8%E6%8E%A7%E5%88%B6]day2MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E9%83%A8%E7%BD%B2%E8%BF%87%E7%A8%8B/</id>
    <published>2025-06-28T05:00:00.000Z</published>
    <updated>2025-06-28T06:24:22.279Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MYSQL数据库部署过程"><a href="#MYSQL数据库部署过程" class="headerlink" title="MYSQL数据库部署过程"></a>MYSQL数据库部署过程</h1><h2 id="1-数据库下载"><a href="#1-数据库下载" class="headerlink" title="1. 数据库下载"></a>1. 数据库下载</h2><ul><li><p>【1】mysql官网下载mysql-8.4.5LTS-winx64，选择Zip文件格式下载，<br>下载链接：<a href="https://dev.mysql.com/downloads/mysql/">https://dev.mysql.com/downloads/mysql/</a><br>版本需要自己进行修改，进行下载选择：</p></li><li><p>【2】解压到目标路径，我这里是H盘根目录，即H:\mysql8</p></li><li><p>【3】根目录下创建my.ini，内容如右：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">端口</span></span><br><span class="line">port = 3306</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">mysql安装目录</span></span><br><span class="line">basedir = H:/mysql8</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">mysql数据存放目录</span></span><br><span class="line">datadir = H:/mysql8/data</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">允许最大连接数</span></span><br><span class="line">max_connections = 1024</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">服务端默认使用字符集</span></span><br><span class="line">character-set-server = utf8</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">默认存储引擎</span></span><br><span class="line">default-storage-engine = INNODB</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">服务唯一标识</span></span><br><span class="line">server_id = 1</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">是否启用慢查询</span></span><br><span class="line">slow_query_log = 1</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">指定查询日志文件的路径和名字</span></span><br><span class="line">slow_query_log_file = H:/mysql8/data/mysql-slow.log</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SQL语句运行时间超过该值才会被记录</span></span><br><span class="line">long_query_time = 10</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">错误日志</span></span><br><span class="line">log-error = H:/mysql8/data/mysql-err.log</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">开启binlog日志</span></span><br><span class="line">log-bin = H:/mysql8/data/mysql-bin.log</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">sql模式</span></span><br><span class="line">sql_mode = NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES</span><br><span class="line">[mysql]</span><br><span class="line">default-character-set = utf8</span><br><span class="line">[client]</span><br><span class="line">port = 3306</span><br><span class="line">default-character-set = utf8</span><br></pre></td></tr></table></figure></li><li><p>【4】管理员运行CMD，首先cd\   再输入H:进入H盘，再进入目标bin目录下即H:\mysql8\bin</p></li><li><p>【5】执行  mysqld –initialize-insecure</p></li><li><p>【6】执行  mysqld –install mysql</p></li><li><p>【7】执行  net start mysql，提示服务已经启动成功表示Mysql服务OK</p></li><li><p>【8】命令行输入：<code>mysql -u root -p</code><br>提示密码直接按Enter即可成功登录，提示 welcome to the  mysql monitor！的字样即表示登录成功。</p></li><li><p>【9】关闭当前命令行，重新启动cmd.exe，重复执行步骤4</p></li><li><p>【10】输入mysqladmin -u root -p password，按下Enter</p></li><li><p>【11】出现Enter password：，直接回车，未设置密码时默认没有密码</p></li><li><p>【12】接着出现New password: 输入新的密码，回车即可，接着出现Confirm new password: 确认密码，回车即可。</p></li><li><p>【13】修改完密码以后，下次重新登录，键入<code>mysql -u root -p</code>即可，接着输入设置后的密码即可登录</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;MYSQL数据库部署过程&quot;&gt;&lt;a href=&quot;#MYSQL数据库部署过程&quot; class=&quot;headerlink&quot; title=&quot;MYSQL数据库部署过程&quot;&gt;&lt;/a&gt;MYSQL数据库部署过程&lt;/h1&gt;&lt;h2 id=&quot;1-数据库下载&quot;&gt;&lt;a href=&quot;#1-数据库下</summary>
      
    
    
    
    <category term="上位机" scheme="https://xmlcrp.github.io/categories/%E4%B8%8A%E4%BD%8D%E6%9C%BA/"/>
    
    
    <category term="运动控制" scheme="https://xmlcrp.github.io/tags/%E8%BF%90%E5%8A%A8%E6%8E%A7%E5%88%B6/"/>
    
    <category term="MySQL数据库" scheme="https://xmlcrp.github.io/tags/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>三轴自动搬运加工机械手项目实战开发-Day1.项目整体软件及硬件介绍</title>
    <link href="https://xmlcrp.github.io/2025/06/28/[%E8%BF%90%E5%8A%A8%E6%8E%A7%E5%88%B6]day1%E9%A1%B9%E7%9B%AE%E6%95%B4%E4%BD%93%E8%BD%AF%E4%BB%B6%E5%8F%8A%E7%A1%AC%E4%BB%B6%E4%BB%8B%E7%BB%8D/"/>
    <id>https://xmlcrp.github.io/2025/06/28/[%E8%BF%90%E5%8A%A8%E6%8E%A7%E5%88%B6]day1%E9%A1%B9%E7%9B%AE%E6%95%B4%E4%BD%93%E8%BD%AF%E4%BB%B6%E5%8F%8A%E7%A1%AC%E4%BB%B6%E4%BB%8B%E7%BB%8D/</id>
    <published>2025-06-28T04:00:00.000Z</published>
    <updated>2025-06-28T03:59:00.786Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、项目整体软件及硬件介绍"><a href="#一、项目整体软件及硬件介绍" class="headerlink" title="一、项目整体软件及硬件介绍"></a>一、项目整体软件及硬件介绍</h1><h2 id="1-运动控制卡的应用"><a href="#1-运动控制卡的应用" class="headerlink" title="1. 运动控制卡的应用"></a>1. 运动控制卡的应用</h2><ul><li>标准化需求：满足新型数控系统对标准化、柔性和开放性的要求</li><li>工业应用：广泛应用于包装机械、印刷机械等工业设备，以及国防装备（如跟踪定位系统）和智能医疗装置的自动化控制系统</li><li>PC机优势：充分发挥PC机强大功能，通过插卡方式实现工业现场控制需求</li><li>对比PLC：相比PLC方案更经济高效（只需PC+板卡），且支持更多轴数（通常PLC仅支持4-8轴）</li></ul><h2 id="2-运动控制卡的使用"><a href="#2-运动控制卡的使用" class="headerlink" title="2. 运动控制卡的使用"></a>2. 运动控制卡的使用</h2><ul><li>控制层级：运动控制卡→驱动器→电机（不直接控制电机）</li><li>驱动器控制方式：<br>  ◦ 脉冲控制：驱动器工作在位置环，脉冲数量决定位移，频率决定速度<br>  ◦ 模拟量控制：驱动器工作在速度&#x2F;电流环，模拟量大小对应速度，位置由编码器反馈</li><li>控制卡类型：<br>  ◦ 脉冲卡：传统方式，需连接多根脉冲线<br>  ◦ 总线卡：通过网线&#x2F;CAN总线通信，接线更简单（如EtherCAT）<br>  ◦ 发展趋势：总线卡将成为主流，但当前价格高于脉冲卡</li></ul><h2 id="3-软件界面介绍"><a href="#3-软件界面介绍" class="headerlink" title="3. 软件界面介绍"></a>3. 软件界面介绍</h2><p><img src="https://raw.githubusercontent.com/XMLCRP/blog-with-hexo/main/images/2025-06-28-09-47-55.png"></p><ul><li>功能分区：<br>  ◦ 手动控制区（定长控制）<br>  ◦ 自动控制区（归零&#x2F;自动运行）<br>  ◦ 运动状态显示区（速度&#x2F;位置实时监控）<br>  ◦ 系统日志区</li><li>核心参数：<br>  ◦ 初始速度：200<br>  ◦ 运行速度：2000<br>  ◦ 加速时间：0.10s<br>  ◦ 定长位移：5000<br>  ◦ 目标产量：100</li></ul><h2 id="4-雷赛DMC2410硬件介绍"><a href="#4-雷赛DMC2410硬件介绍" class="headerlink" title="4. 雷赛DMC2410硬件介绍"></a>4. 雷赛DMC2410硬件介绍</h2><ul><li><p>雷赛DMC2410基本知识<br><img src="https://raw.githubusercontent.com/XMLCRP/blog-with-hexo/main/images/2025-06-28-09-52-58.png"></p></li><li><p>产品特性：<br>  ◦ 基于ASIC技术的PCI总线4轴控制卡<br>  ◦ 支持步进&#x2F;数字伺服电机控制<br>  ◦ 硬件实现直线插补功能</p></li><li><p>型号区别：<br>  ◦ DMC2410：支持连续缓冲插补<br>  ◦ DMC2410B：额外支持速度前瞻功能，插补更平滑</p></li><li><p>工作原理：PC写入运动参数到预置寄存器，硬件自动装载执行</p></li><li><p>雷赛DMC2410产品配套<br><img src="https://raw.githubusercontent.com/XMLCRP/blog-with-hexo/main/images/2025-06-28-09-59-01.png"></p></li><li><p>核心组件：<br>  ◦ 运动控制卡本体<br>  ◦ ACC68CE接线板（含68Pin&#x2F;37Pin连接线）<br>  ◦ 电缆线CABLE37-DP-20（2根）<br>  ◦ 电缆线CABLE68-DP-20（1根）</p></li><li><p>接线方案：<br>  ◦ 板卡→背板→接线板→驱动器<br>  ◦ 需24V独立供电<br>  ◦ 配套端子排便于现场接线</p></li></ul><h2 id="5-步进驱动器电机介绍"><a href="#5-步进驱动器电机介绍" class="headerlink" title="5. 步进驱动器电机介绍"></a>5. 步进驱动器电机介绍</h2><p><img src="https://raw.githubusercontent.com/XMLCRP/blog-with-hexo/main/images/2025-06-28-10-28-00.png"></p><ul><li>系统组成：<br>  ◦ 步进驱动器（接收控制卡信号）<br>  ◦ 57系列步进电机</li><li>控制特点：<br>  ◦ 开环控制（无编码器反馈）<br>  ◦ 通过脉冲信号实现位置控制</li></ul><h2 id="6-三轴模组"><a href="#6-三轴模组" class="headerlink" title="6. 三轴模组"></a>6. 三轴模组</h2><p><img src="https://raw.githubusercontent.com/XMLCRP/blog-with-hexo/main/images/2025-06-28-10-29-12.png"></p><ul><li>机械结构：<br>  ◦ X&#x2F;Y&#x2F;Z三轴运动平台<br>  ◦ 双Y轴设计</li><li>安全配置：<br>  ◦ 每轴3个光电开关（左&#x2F;右限位+原点）<br>  ◦ 共9个光电开关防止飞车事故</li></ul><h2 id="7-辅助设备"><a href="#7-辅助设备" class="headerlink" title="7. 辅助设备"></a>7. 辅助设备</h2><p><img src="https://raw.githubusercontent.com/XMLCRP/blog-with-hexo/main/images/2025-06-28-10-30-06.png"></p><ul><li>控制盒：<br>  ◦ 急停按钮<br>  ◦ 运行状态指示灯</li><li>执行机构：<br>  ◦ 吸嘴（真空吸附）<br>  ◦ 万向调节杆<br>  ◦ 气动系统：<br>  ◦ 真空泵<br>  ◦ XINDE VT30TV-SG1-02电磁阀</li></ul><h1 id="二、知识小结"><a href="#二、知识小结" class="headerlink" title="二、知识小结"></a>二、知识小结</h1><table><thead><tr><th>知识点</th><th>核心内容</th><th>技术实现&#x2F;功能难点</th><th>应用场景</th></tr></thead><tbody><tr><td>运动控制卡概述</td><td>基于PC的扩展卡，通过脉冲&#x2F;总线控制驱动器</td><td>脉冲卡 vs 总线卡（接线复杂度&#x2F;成本差异）</td><td>数控系统、包装机械、印刷机械、国防装备等</td></tr><tr><td>DMC-2410板卡特性</td><td>雷赛四轴运动控制卡，支持硬件插补</td><td>型号含义：2000系列&#x2F;4轴&#x2F;10版本</td><td>多轴点位控制、编码器检测等复杂应用</td></tr><tr><td>控制架构层级</td><td>上位机→运动卡→驱动器→电机</td><td>高压电机（220V&#x2F;380V）与低压控制信号（5V&#x2F;24V）隔离</td><td>工业设备运动控制系统</td></tr><tr><td>驱动器控制方式</td><td>脉冲控制（位置环） vs 模拟量控制（速度环&#x2F;电流环）</td><td>步进电机（开环） vs 伺服电机（闭环反馈）</td><td>精度要求不同的运动场景</td></tr><tr><td>硬件连接方案</td><td>PCI板卡→接线板→驱动器→电机模组</td><td>必须配套端子转接板（原厂37pin&#x2F;68pin线缆）</td><td>三轴机械手控制系统</td></tr><tr><td>安全防护设计</td><td>每轴配置<strong>三限位开关</strong>（左&#x2F;右&#x2F;原点）</td><td>光电开关防飞车 vs 急停按钮防护</td><td>XY-Z三轴模组运动边界保护</td></tr><tr><td>配套设备组成</td><td>真空泵+电磁阀吸附系统</td><td>气动吸盘 vs 电磁铁方案选择</td><td>物料抓取与搬运应用</td></tr><tr><td>软件开发框架</td><td>C#+MySQL8.0 技术栈</td><td>上位机界面四模块：手动控制&#x2F;自动控制&#x2F;状态监控&#x2F;日志模块</td><td>运动控制HMI开发</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一、项目整体软件及硬件介绍&quot;&gt;&lt;a href=&quot;#一、项目整体软件及硬件介绍&quot; class=&quot;headerlink&quot; title=&quot;一、项目整体软件及硬件介绍&quot;&gt;&lt;/a&gt;一、项目整体软件及硬件介绍&lt;/h1&gt;&lt;h2 id=&quot;1-运动控制卡的应用&quot;&gt;&lt;a href=&quot;</summary>
      
    
    
    
    <category term="上位机" scheme="https://xmlcrp.github.io/categories/%E4%B8%8A%E4%BD%8D%E6%9C%BA/"/>
    
    
    <category term="运动控制" scheme="https://xmlcrp.github.io/tags/%E8%BF%90%E5%8A%A8%E6%8E%A7%E5%88%B6/"/>
    
  </entry>
  
  <entry>
    <title>vs2022激活码</title>
    <link href="https://xmlcrp.github.io/2025/06/26/vs2022%E6%BF%80%E6%B4%BB%E7%A0%81/"/>
    <id>https://xmlcrp.github.io/2025/06/26/vs2022%E6%BF%80%E6%B4%BB%E7%A0%81/</id>
    <published>2025-06-26T06:32:00.000Z</published>
    <updated>2025-06-26T06:33:52.025Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Visual-Studio-2022-VS2022-激活密钥"><a href="#Visual-Studio-2022-VS2022-激活密钥" class="headerlink" title="Visual Studio 2022(VS2022)激活密钥"></a>Visual Studio 2022(VS2022)激活密钥</h1><ul><li><p>Pro:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TD244-P4NB7-YQ6XK-Y8MMM-YWV2J</span><br></pre></td></tr></table></figure></li><li><p>Enterprise:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">VHF9H-NXBBB-638P6-6JHCY-88JWH</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Visual-Studio-2022-VS2022-激活密钥&quot;&gt;&lt;a href=&quot;#Visual-Studio-2022-VS2022-激活密钥&quot; class=&quot;headerlink&quot; title=&quot;Visual Studio 2022(VS2022)激活密钥&quot;&gt;</summary>
      
    
    
    
    <category term="上位机" scheme="https://xmlcrp.github.io/categories/%E4%B8%8A%E4%BD%8D%E6%9C%BA/"/>
    
    
    <category term="vs2022" scheme="https://xmlcrp.github.io/tags/vs2022/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://xmlcrp.github.io/2025/06/20/suzuki%E5%BE%85%E5%8A%9E%E4%BA%8B%E9%A1%B9/"/>
    <id>https://xmlcrp.github.io/2025/06/20/suzuki%E5%BE%85%E5%8A%9E%E4%BA%8B%E9%A1%B9/</id>
    <published>2025-06-20T06:53:37.496Z</published>
    <updated>2025-06-20T07:18:19.921Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-RefreshParamMeldList-函数-添加高度"><a href="#1-RefreshParamMeldList-函数-添加高度" class="headerlink" title="1.RefreshParamMeldList(); 函数 添加高度"></a>1.RefreshParamMeldList(); 函数 添加高度</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">RefreshParamMeldList</span>(<span class="params"><span class="built_in">string</span> moldname</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            dgvMeldList.RowHeadersVisible = <span class="literal">false</span>;</span><br><span class="line">            dgvMeldList.Rows.Clear();</span><br><span class="line"></span><br><span class="line">            <span class="built_in">string</span> sql = <span class="string">$&quot;SELECT * FROM [dbo].[ParamcfgMeld] WHERE [MELD_MOLDNAME] = &#x27;<span class="subst">&#123;moldname&#125;</span>&#x27;&quot;</span>;</span><br><span class="line">            DataSet ds = SqlHelper.ExecuteDataset(CommandType.Text, sql);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; ds.Tables[<span class="number">0</span>].Rows.Count; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//添加型号</span></span><br><span class="line">                DataGridViewRow dr = <span class="keyword">new</span> DataGridViewRow();</span><br><span class="line">                DataGridViewTextBoxCell dcOrder = <span class="keyword">new</span> DataGridViewTextBoxCell();</span><br><span class="line">                DataGridViewTextBoxCell dcPosition = <span class="keyword">new</span> DataGridViewTextBoxCell();</span><br><span class="line">                DataGridViewTextBoxCell dcParamID = <span class="keyword">new</span> DataGridViewTextBoxCell();</span><br><span class="line">                DataGridViewTextBoxCell dcHigh = <span class="keyword">new</span> DataGridViewTextBoxCell();</span><br><span class="line">                dcOrder.Value = i + <span class="number">1</span>;</span><br><span class="line">                <span class="comment">//dcOrder.Value = ds.Tables[0].Rows[i][0].ToString();</span></span><br><span class="line">                dcPosition.Value = ds.Tables[<span class="number">0</span>].Rows[i][<span class="number">1</span>].ToString();</span><br><span class="line">                dcParamID.Value = ds.Tables[<span class="number">0</span>].Rows[i][<span class="number">2</span>].ToString();</span><br><span class="line">                dcHigh.Value = ds.Tables[<span class="number">0</span>].Rows[i][<span class="number">3</span>].ToString();</span><br><span class="line">                dr.Cells.Add(dcOrder);</span><br><span class="line">                dr.Cells.Add(dcPosition);</span><br><span class="line">                dr.Cells.Add(dcParamID);</span><br><span class="line">                dr.Cells.Add(dcHigh);</span><br><span class="line"></span><br><span class="line">                dgvMeldList.Rows.Add(dr);</span><br><span class="line">            &#125;</span><br><span class="line">            dgvMeldList.ClearSelection();</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1-RefreshParamMeldList-函数-添加高度&quot;&gt;&lt;a href=&quot;#1-RefreshParamMeldList-函数-添加高度&quot; class=&quot;headerlink&quot; title=&quot;1.RefreshParamMeldList(); 函数 添加高</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>5G bumper 内部追溯介绍</title>
    <link href="https://xmlcrp.github.io/2025/06/20/5G%20bumper%20%E5%86%85%E9%83%A8%E8%BF%BD%E6%BA%AF%E4%BB%8B%E7%BB%8D/"/>
    <id>https://xmlcrp.github.io/2025/06/20/5G%20bumper%20%E5%86%85%E9%83%A8%E8%BF%BD%E6%BA%AF%E4%BB%8B%E7%BB%8D/</id>
    <published>2025-06-20T04:00:00.000Z</published>
    <updated>2025-06-20T10:51:55.425Z</updated>
    
    <content type="html"><![CDATA[<h1 id="5G-bumper-内部追溯介绍"><a href="#5G-bumper-内部追溯介绍" class="headerlink" title="5G bumper 内部追溯介绍"></a>5G bumper 内部追溯介绍</h1><h2 id="0-前言"><a href="#0-前言" class="headerlink" title="0.前言"></a>0.前言</h2><p>有的时候客户工厂没有mes系统或者mes系统不可靠，这时候需要我们提供一套简单的内部MES追溯系统。本文以5G-bumper站作为示例，介绍下内部追溯到主要功能。</p><p>本线体可分为13个工站，12个从站1个主站，主站为包装站。10站操作员负责上料，130站操作员负责包装，其余工站无人值守。<br><img src="https://raw.githubusercontent.com/XMLCRP/blog-with-hexo/main/images/2025-06-20-18-29-02.png"><br><img src="https://raw.githubusercontent.com/XMLCRP/blog-with-hexo/main/images/2025-06-20-18-29-11.png"></p><h2 id="1-开班点检"><a href="#1-开班点检" class="headerlink" title="1.开班点检"></a>1.开班点检</h2><p><img src="https://raw.githubusercontent.com/XMLCRP/blog-with-hexo/main/images/2025-06-20-18-15-35.png"></p><p>在开班点检模式下，操作员在主站下发型号 和 每一站需要点检的样件条码。下发成功后开始点检。从站会对条码进行判断，若非本站条码，直接跳站。<br>全部样件点检完成后，主站点击结果查询，获取点检结果，点检成功后允许进入自动模式生产。</p><h2 id="2-生产"><a href="#2-生产" class="headerlink" title="2.生产"></a>2.生产</h2><p><img src="https://raw.githubusercontent.com/XMLCRP/blog-with-hexo/main/images/2025-06-20-18-21-17.png"></p><p>生产模式下，操作员在主站下发型号，下发成功后首站开始放料。</p><h2 id="3-返工"><a href="#3-返工" class="headerlink" title="3.返工"></a>3.返工</h2><p><img src="https://raw.githubusercontent.com/XMLCRP/blog-with-hexo/main/images/2025-06-20-18-22-43.png"></p><p>返工模式下，操作员在主站下发型号，然后下发返工时需要工作的工站。不需要工作的工站直接跳站。</p><h2 id="4-查询记录"><a href="#4-查询记录" class="headerlink" title="4.查询记录"></a>4.查询记录</h2><p><img src="https://raw.githubusercontent.com/XMLCRP/blog-with-hexo/main/images/2025-06-20-18-26-08.png"></p><p>记录查询功能包含了不同编码的查询方式，以应对一个产品多个条码的情况。本线体内部mes包含了：外壳码查询以及PCBA码查询功能。除此之外增加了模糊查询以及一键到处excel的功能。</p><p><img src="https://raw.githubusercontent.com/XMLCRP/blog-with-hexo/main/images/2025-06-20-18-27-51.png"><br><img src="https://raw.githubusercontent.com/XMLCRP/blog-with-hexo/main/images/2025-06-20-18-27-57.png"><br>点击某站所在的行，即可看到该站生产数据的详细记录。</p><h2 id="5-追溯"><a href="#5-追溯" class="headerlink" title="5.追溯"></a>5.追溯</h2><p><img src="https://raw.githubusercontent.com/XMLCRP/blog-with-hexo/main/images/2025-06-20-18-36-56.png"><br><img src="https://raw.githubusercontent.com/XMLCRP/blog-with-hexo/main/images/2025-06-20-18-37-06.png"></p><p>本站的追溯采用了前站追溯到形式，本站将结果文件写到本地文件夹中，然后共享文件夹。后一站通过磁盘映射的方式将前站的结果文件夹映射到本地。通过条码找到指定的结果文件读取文件中的结果值，从而实现追溯。</p><h2 id="6-总结"><a href="#6-总结" class="headerlink" title="6.总结"></a>6.总结</h2><p>本文所介绍的内部mes追溯功能虽然比不上工厂mes系统功能强大，但是麻雀虽小五脏俱全，基础功能均已具备，并且胜在稳定。不必考虑到工厂服务器是否故障，网口等硬件线路造成的通讯不稳定等情况，因此广受用户好评。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;5G-bumper-内部追溯介绍&quot;&gt;&lt;a href=&quot;#5G-bumper-内部追溯介绍&quot; class=&quot;headerlink&quot; title=&quot;5G bumper 内部追溯介绍&quot;&gt;&lt;/a&gt;5G bumper 内部追溯介绍&lt;/h1&gt;&lt;h2 id=&quot;0-前言&quot;&gt;&lt;a </summary>
      
    
    
    
    <category term="上位机" scheme="https://xmlcrp.github.io/categories/%E4%B8%8A%E4%BD%8D%E6%9C%BA/"/>
    
    
    <category term="MES" scheme="https://xmlcrp.github.io/tags/MES/"/>
    
    <category term="5G bumper" scheme="https://xmlcrp.github.io/tags/5G-bumper/"/>
    
  </entry>
  
  <entry>
    <title>SQL SERVER 丢失管理员权限解决办法</title>
    <link href="https://xmlcrp.github.io/2025/06/20/SQL%20SERVER%20%E4%B8%A2%E5%A4%B1%E7%AE%A1%E7%90%86%E5%91%98%E6%9D%83%E9%99%90%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
    <id>https://xmlcrp.github.io/2025/06/20/SQL%20SERVER%20%E4%B8%A2%E5%A4%B1%E7%AE%A1%E7%90%86%E5%91%98%E6%9D%83%E9%99%90%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</id>
    <published>2025-06-20T04:00:00.000Z</published>
    <updated>2025-06-20T05:21:54.966Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0-前言"><a href="#0-前言" class="headerlink" title="0.前言"></a>0.前言</h1><p>SQL SERVER在使用中如果碰到管理员账户丢失，且无法通过windows用户登陆时，可以使用微软留的两个后门添加管理员账号进去再登陆。本文讲解其中一种。</p><h1 id="1-关掉SQL-SERVER-相关的所有服务"><a href="#1-关掉SQL-SERVER-相关的所有服务" class="headerlink" title="1.关掉SQL SERVER 相关的所有服务"></a>1.关掉SQL SERVER 相关的所有服务</h1><p>进入”服务”，找到SQL相关的所有服务，全部关掉。并且关掉SSMS软件。</p><h1 id="2-重新以严格过滤的单用户模式启动"><a href="#2-重新以严格过滤的单用户模式启动" class="headerlink" title="2.重新以严格过滤的单用户模式启动"></a>2.重新以严格过滤的单用户模式启动</h1><p>以管理员身份打开CMD，输入下面的命令，无报错，看到滚动的数据库运行数据说明执行成功。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;C:\Program Files\Microsoft SQL Server\MSSQL14.MSSQLSERVER\MSSQL\Binn\sqlservr.exe&quot; -sMSSQLSERVER -m&quot;SQLCMD&quot; -T4022 -T3659</span><br></pre></td></tr></table></figure><h1 id="3-添加sysadmin权限账户"><a href="#3-添加sysadmin权限账户" class="headerlink" title="3.添加sysadmin权限账户"></a>3.添加sysadmin权限账户</h1><p>以管理员权限再打开一个CMD窗口，逐行输入下面的命令。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sqlcmd -S localhost -E</span><br><span class="line">GO</span><br><span class="line">IF NOT EXISTS (SELECT 1 FROM sys.server_principals WHERE name = N&#x27;AUTOMOTIVE-WAN\uif71007&#x27;) CREATE LOGIN [AUTOMOTIVE-WAN\uif71007] FROM WINDOWS;</span><br><span class="line">ALTER SERVER ROLE sysadmin ADD MEMBER [AUTOMOTIVE-WAN\uif71007];</span><br><span class="line">GO</span><br><span class="line">EXIT</span><br></pre></td></tr></table></figure><h1 id="4-恢复现场"><a href="#4-恢复现场" class="headerlink" title="4.恢复现场"></a>4.恢复现场</h1><p>关掉第二个CMD窗口，回到第一个CMD窗口点击ctrl+c 退出sqlserver程序。<br>进入”服务”，打开之前关闭的SQL相关服务。<br>打开SSMS软件，使用”windows身份验证”即可登陆。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;0-前言&quot;&gt;&lt;a href=&quot;#0-前言&quot; class=&quot;headerlink&quot; title=&quot;0.前言&quot;&gt;&lt;/a&gt;0.前言&lt;/h1&gt;&lt;p&gt;SQL SERVER在使用中如果碰到管理员账户丢失，且无法通过windows用户登陆时，可以使用微软留的两个后门添加管理员账</summary>
      
    
    
    
    <category term="上位机" scheme="https://xmlcrp.github.io/categories/%E4%B8%8A%E4%BD%8D%E6%9C%BA/"/>
    
    
    <category term="SQL SERVER" scheme="https://xmlcrp.github.io/tags/SQL-SERVER/"/>
    
  </entry>
  
  <entry>
    <title>基本句型</title>
    <link href="https://xmlcrp.github.io/2025/06/18/%E7%AC%AC%E4%B8%80%E8%8A%82-%E5%9F%BA%E6%9C%AC%E5%8F%A5%E5%9E%8B/"/>
    <id>https://xmlcrp.github.io/2025/06/18/%E7%AC%AC%E4%B8%80%E8%8A%82-%E5%9F%BA%E6%9C%AC%E5%8F%A5%E5%9E%8B/</id>
    <published>2025-06-18T04:00:00.000Z</published>
    <updated>2025-06-18T07:21:59.679Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基本句型"><a href="#基本句型" class="headerlink" title="基本句型"></a>基本句型</h1><h2 id="0-前言"><a href="#0-前言" class="headerlink" title="0. 前言"></a>0. 前言</h2><p>选用教程：<br>1.顾家北的语法书<br>2.<a href="https://www.bilibili.com/video/BV1XY411J7aG?p=2&vd_source=59ad385e6bc4df0fad41cf2c50c1f656">B站语法兔的视频</a></p><h2 id="1-英文的基本句型"><a href="#1-英文的基本句型" class="headerlink" title="1. 英文的基本句型"></a>1. 英文的基本句型</h2><p>所谓的基本句型就是一个句子拆到不能再拆了，再拆下去句子就不完整了。<br>所有的基本基本句型都是在表达一个含义：什么 + 怎么样<br>什么 -&gt; 主语  怎么样-&gt; 谓语<br><img src="https://raw.githubusercontent.com/XMLCRP/blog-with-hexo/main/images/2023-05-18-10-35-34.png"></p><p>谓语动词有5个基本类别：<br><img src="https://raw.githubusercontent.com/XMLCRP/blog-with-hexo/main/images/2023-05-18-10-37-48.png"></p><p>根据5种谓语动词对应5种基本句型。<br><img src="https://raw.githubusercontent.com/XMLCRP/blog-with-hexo/main/images/2023-05-18-10-38-43.png"></p><p>例子：</p><ol><li><p>无需动作承受者(宾语)： 主语 + 不及物动词<br>Rabbit sleep.</p></li><li><p>一个宾语，无补充信息： 主语 + 及物动词 + 宾语<br>Rabbit eat carrot.</p></li><li><p>两个宾语： 主语 + 双及物动词 + 间接宾语 + 直接宾语<br>Rabbit teaches you English.</p></li><li><p>一个宾语 + 补充信息： 主语 + 复杂及物动词 + 宾语 + 宾语补足语<br>Rabbit considers you smart.</p></li><li><p>赋予信息： 主语 + 系动词 + 主语补语&#x2F;表语<br>Rabbit is tall.  Rabbit is in the home. Rabbit smalls nice.<br>Rabbit &#x3D;  tall.  Rabbit &#x3D;  in the home. Rabbit   &#x3D;    nice.</p></li></ol><h2 id="2-英文的句子成分"><a href="#2-英文的句子成分" class="headerlink" title="2. 英文的句子成分"></a>2. 英文的句子成分</h2><p>首先明确一点：谓语不等于谓语动词。<br>谓语动词：谓语动词是构成句子谓语的主要成分，一般表示主语的动作、状态或存在。<br>谓语：谓语是一个更广泛的概念，它可以是由一个动词构成，也可以是由动词和其他词（如宾语、补语、状语等）共同构成。</p><p>句子成分包含以下几种，其中前5种刚才的基本句型种已经见过了，就不详细解释了。</p><ol><li>主语</li><li>谓语动词</li><li>宾语</li><li>宾语补语</li><li>主语补语（表语）</li><li>定语 – 主要用来修饰主语和宾语<br>例：The little white rabbit ate a large carrot.  “The little write”是主语”rabbit”的定语; “a large” 是宾语”carrot”的定语。两个定语分别修饰主语和宾语。</li><li>状语 – 主要用来修饰谓语动词<br>例： The rabbit ate quickly.  这里的quickly是副词，在句中做状语，修饰谓语动词ate</li><li>同位语 – 主要用来把主语或者宾语再说一遍<br>The rabbit , an English teacher, eats carrots.</li></ol><h2 id="3-复合句-并列句-和-从句"><a href="#3-复合句-并列句-和-从句" class="headerlink" title="3. 复合句&#x2F;并列句 和 从句"></a>3. 复合句&#x2F;并列句 和 从句</h2><p>根据语言简洁性的实际需要，简单句可以进行组合，形成一些复杂的句式，这些复杂的句式根据排列方式不同可分为复合句&#x2F;并列句 和 从句。</p><p>复合句&#x2F;并列句 指的是简单句以并列的方式组合在一起。 而从句则是以从属关系组合在一起。</p><p>从句是由简单句构成的，根据从句充当的句子成分不同，从句可分为如下几类：<br>a.主语从句，b.宾语从句，c.表语从句，d.同位语从句，e.定语从句，f.状语从句。其中a,b,c,d由于具有名词的性质，又称为名词性从句。<br><img src="https://raw.githubusercontent.com/XMLCRP/blog-with-hexo/main/images/2023-05-18-16-01-39.png"></p><h2 id="4-词性（词类）"><a href="#4-词性（词类）" class="headerlink" title="4. 词性（词类）"></a>4. 词性（词类）</h2><p>英语语法中，句子成分和词类是两种完全不同的概念。</p><p>每一种句子成分，除了谓语动词一定是动词，其他每一种成分都可能是不同的词类。</p><p><img src="https://raw.githubusercontent.com/XMLCRP/blog-with-hexo/main/images/2023-05-18-16-11-17.png"></p><p>英语中的词性有如下几种：</p><ol><li>名词 表人和物  Rabbit is a teacher. 这里的teacher 就是名词.</li><li>冠词 英语中说明人和事物 Rabbit is a teacher. 这里的a 就是冠词。 其余还有a an the</li><li>带刺 替代人和物 I am a rabbit. 这里的I 就是代词，替代我。</li><li>形容词 形容人和物 He is a smart rabbit. 这里的smart 就是形容词。</li><li>数词 表数量 Rabbit ate two carrots. 这里的two 就是数词。</li><li>副词 修饰动词或形容词等等 Rabbit ate carrot quickly. 这里的quickly是副词，修饰ate这个动词。</li><li>介词 表示和其他词关系的词 I ate carrots with chopsticks. 这里的with 就是介词，它连接了谓语动词ate 和chopsticks。与chopsticks一起修饰吃这个动作。</li></ol><h2 id="5-谓语动词"><a href="#5-谓语动词" class="headerlink" title="5. 谓语动词"></a>5. 谓语动词</h2><p>谓语动词有三种特殊的本领，而中文里的动词没有这些本领，所以是难点。</p><ol><li>动作时间 比如过去 和 将来 </li><li>动作的状态 比如 完成或这在进行的状态</li><li>表示动作的假设情感等 如：虚拟语气 If I were a rabbit… 陈述语气 I ate a carrot and… 祈使语气 Eat this carrot and …</li></ol><p>1,2,3 分别被称为谓语动词的 “时，体，气”</p><p>1 + 2 合在一起被称为时态。1中包括4种时间，2种包含4种状态，1和2互相排列组形成了英语的合理论上的16种时态。<br><img src="https://raw.githubusercontent.com/XMLCRP/blog-with-hexo/main/images/2023-05-18-16-39-19.png"></p><p>后面会对这三者进行详细描述。</p><h2 id="6-助动词"><a href="#6-助动词" class="headerlink" title="6. 助动词"></a>6. 助动词</h2><p>英语的谓语动词本身往往不能够独立完成上面说的三项特殊本领，以及另外一些其他的本领，谓语动词自己也无法完成表示否定， 可能性，必须性等的意思。</p><p>想让谓语动词充分发挥，必须使用谓语动词的小伙伴–助动词，来帮助谓语动词完成任务。<br><img src="https://raw.githubusercontent.com/XMLCRP/blog-with-hexo/main/images/2023-05-18-16-52-04.png"></p><p><strong>需要注意的是，有些助动词在做助动词的时候没有实意，但是做实意动词或名词等词性的时候是有自身词义的，要注意区分它在句子种的成分，从而确定它的含义。</strong><br>比如上图中的助动词：<br>can- n.易拉罐， might- n.力量， musty- a.发霉的， do- v.做， have- v.有， be- 存在。</p><h2 id="7-非谓语动词"><a href="#7-非谓语动词" class="headerlink" title="7. 非谓语动词"></a>7. 非谓语动词</h2><p>动词除了做谓语动词以外，还可以做非谓语动词。<br><img src="https://raw.githubusercontent.com/XMLCRP/blog-with-hexo/main/images/2023-05-18-16-59-54.png"></p><p>非谓语动词几乎可以取代所有的从句，从而简化句子。<br>与谓语动词不同的是，非谓语动词不再具有表示时间，状态，语态，语气的功能。非谓语动词丧失了时态，语态，语气的功能了。<br><img src="https://raw.githubusercontent.com/XMLCRP/blog-with-hexo/main/images/2023-05-18-17-10-08.png"></p><h2 id="8-动词"><a href="#8-动词" class="headerlink" title="8. 动词"></a>8. 动词</h2><p>动词是英语语法的核心，以动词为原点，可以串起整个英语语法体系，如下图：<br><img src="https://raw.githubusercontent.com/XMLCRP/blog-with-hexo/main/images/2023-05-18-17-13-56.png"></p><p>下面用文字来表述下上面的图，动词分为谓语动词和非谓语动词。<br>谓语动词分为5种类型：不及物动词，单及物动词，双及物动词，复杂及物动词，系动词。这五种谓语动词分别对应着5种基本句型。这五种基本句型囊括了5种句子成分：主语，谓语动词，宾语，宾语补语，主语补语（表语）。除了此之外句子成分还有：定语，状语，同位语。简单句可以组合成并列关系的复合句（并列复合句）；从属关系的复杂句（主从复合句），复杂句包含了主句和从句，从句可以充当除所有除谓语动词外的句子成分。句子成分可以由不同词类充当。谓语动词可以表达动作的时间，状态，语气等，但是需要用到助动词，助动词还能帮助动词表达：否定，被动，可能性，义务性等等。非谓语动词可以视为改动后的谓语动词，可以充当除谓语动词外的所有句子成分，可以用来取代几乎所有从句，简化句子。</p><p>注意：这只是一个粗略的框架图，英语语法有很多细节性的问题，这个框架并没有提及到。这个框架图只是为了从一个全局的角度去理解英语语法规则。另外，只需要掌握核心语法即可，甚至只需要掌握IELS对应分数现象以内的语法即可。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;基本句型&quot;&gt;&lt;a href=&quot;#基本句型&quot; class=&quot;headerlink&quot; title=&quot;基本句型&quot;&gt;&lt;/a&gt;基本句型&lt;/h1&gt;&lt;h2 id=&quot;0-前言&quot;&gt;&lt;a href=&quot;#0-前言&quot; class=&quot;headerlink&quot; title=&quot;0. 前言&quot;&gt;&lt;/</summary>
      
    
    
    
    <category term="IELTS学习" scheme="https://xmlcrp.github.io/categories/IELTS%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="语法" scheme="https://xmlcrp.github.io/tags/%E8%AF%AD%E6%B3%95/"/>
    
    <category term="B站语法兔" scheme="https://xmlcrp.github.io/tags/B%E7%AB%99%E8%AF%AD%E6%B3%95%E5%85%94/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://xmlcrp.github.io/2025/06/17/hello-world/"/>
    <id>https://xmlcrp.github.io/2025/06/17/hello-world/</id>
    <published>2025-06-17T00:26:00.457Z</published>
    <updated>2025-06-17T00:18:24.904Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
